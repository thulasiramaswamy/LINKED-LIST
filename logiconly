// even or odd
// two numbers are equal or not
// xor
// power of 2 check
// swap two bytes
// turn off rightmost bit
----------------------------
n = n & 1;
if(n) odd
else even
----------------------------
if(!(a^b)) a and b are equal
else a and b are not equal
----------------------------
#define XOR(x, y) (x|y) & (~x|~y)
----------------------------
#define pow(n) n & (n-1)
res = pow(n);
if res == 0 power of 2, else no
-----------------------------
swap two bytes
#define SWAP(x)  ((x & 0x00ff) << 8) | ((x & 0xff00) >> 8)
-----------------------------
#define turnoff(x) x & (x - 1)
-----------------------------
